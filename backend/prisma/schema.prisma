// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int     @id @default(autoincrement())
  username     String
  fullName     String
  email        String  @unique
  password     String
  photoProfile String?
  bio          String?

  threads   Thread[]
  replies   Reply[]
  likes     Like[]
  followeds Follow[] @relation("followed")
  followers Follow[] @relation("follower")

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("users")
}

model Follow {
  id         Int  @id @default(autoincrement())
  followedId Int?
  followerId Int?

  followed User? @relation("followed", fields: [followedId], references: [id])
  follower User? @relation("follower", fields: [followerId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("follows")
}

model Thread {
  id      Int     @id @default(autoincrement())
  content String
  image   String?
  userId  Int?

  user User? @relation(fields: [userId], references: [id])

  replies Reply[]
  likes   Like[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("threads")
}

model Reply {
  id       Int     @id @default(autoincrement())
  content  String
  image    String?
  userId   Int?
  threadId Int?

  user   User?   @relation(fields: [userId], references: [id])
  thread Thread? @relation(fields: [threadId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("replies")
}

model Like {
  id       Int  @id @default(autoincrement())
  userId   Int?
  threadId Int?

  user   User?   @relation(fields: [userId], references: [id])
  thread Thread? @relation(fields: [threadId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("likes")
}
